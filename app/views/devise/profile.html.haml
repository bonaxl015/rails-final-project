.profile-body
  .container
    -# User Information
    .row.profile-container
      .col-2
      .col-10
        .profile-full-name= @user.full_name
        .profile-username= @user.username
        .profile-stats
          %span.text-maroon= "#{pluralize(@user.posts.count, "Post")} |"
          %span.text-maroon= "#{@user.followed_users.count} Following |"
          %span.text-maroon= "#{pluralize(@user.follower_users.count, "Follower")}"
        .profile-buttons
          .btn.btn-maroon#relationships-btn(type="button" data-bs-toggle="modal" data-bs-target="#relationships-modal") Followers and Following
          - if @user == current_user
            = link_to "My Events", events_path, class: "btn btn-maroon"
            = link_to "Edit Profile", edit_user_registration_path, class: "btn btn-maroon"
          - unless @user == current_user
            - if current_user.following?(@user)
              = link_to "Unfollow", relationship_path(user_id: @user.id), method: :delete, class: "btn btn-maroon"
            - else
              = link_to "Follow", relationships_path(user_id: @user.id), method: :post, class: "btn btn-maroon"
    
    -# User Posts
    .row
      .col-8
        -if @user_posts.empty?
          .post-card
            .post-text
              .no-post-text No posts to show
        - else
          - @user_posts.each do |post|
            .post-card
              .post-text
                .d-flex.justify-content-between
                  .username-bold= link_to @user.username, profile_path(@user.username)
                  .post-edit-delete
                    - if post.user.username == current_user.username
                      = link_to "Edit", edit_post_path(post), class: "text-space"
                      = link_to "Delete", post, method: :delete, class: "text-space"
                .distance-date= distance_of_time_posted_in_words(post.created_at)
                .caption= post.caption
              - if post.image.present?
                = image_tag post.image.url, class: 'img img-fluid'

              -# Likers Modal
              #likers-modal.modal.fade(tabindex="-1" aria-labelledby="likes" aria-hidden="true")
                .modal-dialog.modal-dialog-centered.modal-dialog-scrollable
                  .modal-content
                    .modal-header
                      %h5#likes.modal-title Likes
                      %button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
                    .modal-body
                      - post.likes.each do |liker|
                        %p= link_to full_name(liker.user), profile_path(liker.user.username)

              -# Like Button
              .row.container-margin-top
                .col-6
                  - if liker(post)
                    = button_to 'Unlike', post_like_path(post, liker(post)), method: :delete, class: "btn btn-maroon btn-wide btn-like-comment"
                  - else
                    = button_to 'Like', post_likes_path(post), method: :post, class: "btn btn-plain btn-wide btn-like-comment"
                .col-6
                  .btn.btn-plain.btn-wide.btn-like-comment.btn-comment Comment

              -# Comment Section
              .comment-box
                .d-flex.justify-content-between
                  - unless post.likes.count == 0
                    .post-likes(type="button" data-bs-toggle="modal" data-bs-target="#likers-modal")= "#{pluralize(post.likes.count, "like")}"
                  .comment-toggle View Comments
                .comment-display.hidden
                  = render "posts/comments", post: post
              .comment-form
                = render "comments/comment_form", post: post

      -# Sidebar
      .col-4
        -# Events Display
        .event-items
          .event-padding
            - if true
              .event-title No attended events
            - else
              .event-title Events Reminders
        -# Latest News Display      
        .news-items
          .news-padding
            .news-title Latest News

= render "follow_modal"